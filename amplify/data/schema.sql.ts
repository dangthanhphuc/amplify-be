/* eslint-disable */
/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */
import { a } from "@aws-amplify/data-schema";
import { configure } from "@aws-amplify/data-schema/internals";
import { secret } from "@aws-amplify/backend";

export const schema = configure({
    database: {
        identifier: "IDXRmlBfQHJsV6kbPSod9g",
        engine: "mysql",
        connectionUri: secret("SQL_CONNECTION_STRING")
    }
}).schema({
    "agent_categories": a.model({
        id: a.integer().required(),
        name: a.string().required()
    }).identifier([
        "id"
    ]),
    "ai_agents": a.model({
        id: a.integer().required(),
        name: a.string(),
        cost: a.string(),
        introduction: a.string(),
        description: a.string(),
        foreword: a.string(),
        version: a.string(),
        is_public: a.integer(),
        like_count: a.integer(),
        total_interactions: a.integer(),
        creator_id: a.integer(),
        agent_category_id: a.integer(),
        knowledge_base_id: a.string(),
        sys_prompt: a.string(),
        create_at: a.datetime(),
        model: a.string(),
        capabilities: a.string()
    }).identifier([
        "id"
    ]),
    "ai_reviews": a.model({
        id: a.integer().required(),
        description: a.string(),
        rating: a.integer(),
        create_at: a.datetime(),
        ai_agent_id: a.integer(),
        reporter_id: a.integer(),
        report_categories_id: a.integer()
    }).identifier([
        "id"
    ]),
    "chats": a.model({
        id: a.integer().required(),
        raw_content: a.string(),
        create_at: a.datetime(),
        user_id: a.integer(),
        ai_agent_id: a.integer()
    }).identifier([
        "id"
    ]),
    "report_categories": a.model({
        id: a.integer().required(),
        name: a.string().required(),
        reversity: a.integer()
    }).identifier([
        "id"
    ]),
    "roles": a.model({
        id: a.integer().required(),
        name: a.string().required()
    }).identifier([
        "id"
    ]),
    "user_likes": a.model({
        user_id: a.integer().required(),
        ai_agent_id: a.integer().required(),
        liked: a.integer(),
        create_at: a.datetime()
    }).identifier([
        "user_id",
        "ai_agent_id"
    ]),
    "users": a.model({
        id: a.integer().required(),
        name: a.string(),
        display_name: a.string(),
        profile_image: a.string(),
        description: a.string(),
        role_id: a.integer()
    }).identifier([
        "id"
    ])
});
