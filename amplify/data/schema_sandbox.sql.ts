/* eslint-disable */
/* THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */
import { a } from "@aws-amplify/data-schema";
import { configure } from "@aws-amplify/data-schema/internals";
import { secret } from "@aws-amplify/backend";

export const schema = configure({
    database: {
        identifier: "IDBaHsVLAtoz5dOIGxj8OPw",
        engine: "mysql",
        connectionUri: secret("SQL_CONNECTION_STRING_SANDBOX"),
        vpcConfig: {
            vpcId: "vpc-023b988ef1945c386",
            securityGroupIds: [
                "sg-06c1e5b6d732d6c74"
            ],
            subnetAvailabilityZones: [
                {
                    subnetId: "subnet-0d9f35c8791bcc577",
                    availabilityZone: "us-east-1d"
                },
                {
                    subnetId: "subnet-0142bd2eb9f280b40",
                    availabilityZone: "us-east-1f"
                },
                {
                    subnetId: "subnet-0f0959d95649e4cd8",
                    availabilityZone: "us-east-1e"
                },
                {
                    subnetId: "subnet-080fa077c97660073",
                    availabilityZone: "us-east-1c"
                },
                {
                    subnetId: "subnet-0cb0bb204dfc79fa0",
                    availabilityZone: "us-east-1a"
                },
                {
                    subnetId: "subnet-0cb3d3fa13cf7b033",
                    availabilityZone: "us-east-1b"
                }
            ]
        }
    }
}).schema({
    "agent_categories": a.model({
        id: a.string().required(),
        name: a.string().required()
    }).identifier([
        "id"
    ]),
    "agent_version": a.model({
        ai_agent_id: a.string().required(),
        version_value: a.string().required(),
        update_at: a.datetime(),
        description: a.string()
    }).identifier([
        "ai_agent_id",
        "version_value"
    ]),
    "ai_categories": a.model({
        ai_agent_id: a.string().required(),
        agent_category_id: a.string().required()
    }).identifier([
        "ai_agent_id",
        "agent_category_id"
    ]),
    "ai_reviews": a.model({
        id: a.string().required(),
        description: a.string(),
        rating: a.integer().required(),
        create_at: a.datetime().required(),
        ai_agent_id: a.string().required(),
        reporter_id: a.string().required(),
        report_categories_id: a.string().required()
    }).identifier([
        "id"
    ]),
    "chats": a.model({
        id: a.string().required(),
        raw_content: a.string(),
        create_at: a.datetime(),
        user_id: a.string(),
        ai_agent_id: a.string(),
        create_by: a.ref("ChatsCreate_by")
    }).identifier([
        "id"
    ]),
    "report_categories": a.model({
        id: a.string().required(),
        name: a.string().required(),
        severity: a.integer().required()
    }).identifier([
        "id"
    ]),
    "user_likes": a.model({
        user_id: a.string().required(),
        ai_agent_id: a.string().required(),
        liked: a.integer(),
        create_at: a.datetime().required()
    }).identifier([
        "user_id",
        "ai_agent_id"
    ]),
    "ai_agents": a.model({
        id: a.string().required(),
        name: a.string().required(),
        icon: a.string(),
        introduction: a.string().required(),
        description: a.string().required(),
        foreword: a.string().required(),
        last_version: a.string().required(),
        status: a.string().required(),
        like_count: a.integer().required(),
        total_interactions: a.integer().required(),
        creator_id: a.string().required(),
        knowledge_base_url: a.string(),
        sys_prompt: a.string(),
        model: a.string(),
        capabilities: a.string(),
        cost: a.float().required(),
        suggested_questions: a.string().required(),
        is_public: a.integer().required(),
        type: a.ref("Ai_agentsType").required()
    }).identifier([
        "id"
    ]),
    "users": a.model({
        id: a.string().required(),
        email: a.string().required(),
        name: a.string(),
        display_name: a.string(),
        profile_image: a.string(),
        description: a.string(),
        role_groups: a.string().required()
    }).identifier([
        "id"
    ]),
    ChatsCreate_by: a.enum([
        "AI",
        "USER"
    ]),
    Ai_agentsType: a.enum([
        "ADMIN",
        "EXPERT",
        "OUTSIDE"
    ])
});
